name: Tests
on: [push, pull_request, workflow_dispatch]
jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install requirements
        run: pip install ruff
      - name: Run ruff
        run: ruff check --output-format=github .

  test:
    needs: ruff
    strategy:
      matrix:
        include:
          - ckan-version: "2.11"
            ckan-image: "ckan/ckan-dev:2.11-py3.10"
          - ckan-version: "2.10"
            ckan-image: "ckan/ckan-dev:2.10-py3.10"
      fail-fast: false

    name: CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.ckan-image }}
      options: --user root
    services:
      solr:
        image: ckan/ckan-solr:${{ matrix.ckan-version }}-solr9
      postgres:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
      - uses: actions/checkout@v4
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
          pip install -e .
          # Replace default path to CKAN core config file with the one on the container
          sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini
          # Install ckanext-report
          git clone https://github.com/vrk-kpa/ckanext-report
          pip install -e ckanext-report
          pip install -r ckanext-report/requirements.txt
      - name: Setup extension
        run: |
          ckan -c test.ini db init
          ckan -c test.ini matomo init_db
      - name: Run tests
        run: pytest --ckan-ini=test.ini --cov=ckanext.matomo --disable-warnings ckanext/matomo/tests

      - name: install codecov requirements
        run: |
          apk add gpg gpg-agent

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          os: alpine
